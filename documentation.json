{
    "pipes": [],
    "interfaces": [
        {
            "name": "VContext",
            "id": "interface-VContext-3b87f0be63f14e35201bfbd7b451ee73c98d06f427ca432493d24e421a48a13474326473edfb24d70e70db1703618675c02fddbf2ada1986fe1a2094bb7e9e4c",
            "file": "projects/virtualizer/core/refs/context.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\n\nexport const V_CONTEXT = new InjectionToken<VContext>('')\n\nexport interface VContext<T = any> {\n  data: T;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "VRect",
            "id": "interface-VRect-8b4b1c32e2f4f15902c873933f730652b64d152340fcccd9cad862bbe54f19f5be7e4adb102ab1f36322b18e6a266d7910a3c83fd03220d1da4a98f5fd409533",
            "file": "projects/virtualizer/core/refs/rect.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface VRect {\n  position: number;\n  size: number;\n}\n\nexport type RectBy<T> = (\n  previous: VRect,\n  item: T,\n  index: number,\n  self: T[],\n) => VRect;\n",
            "properties": [
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "VStore",
            "id": "injectable-VStore-5b35d1e98cb8ddf9671207b9276c1a72ed1ac70b97f7794f53399d29544ffca29cde54aae5fcf309cc512cccd764f0bcf7173e39b1ac5f44bae3ae9cfbacab42",
            "file": "projects/virtualizer/core/store/store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VStore { }\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "VRenderer",
            "id": "class-VRenderer-7b2b8deb46917667c545781ef77cb0bd2850abed86e47d2f8238cef7082b1974c9a356f8bba4055e1783a82f0ed89518471ffa154eb1c17e10d83649b66f64c8",
            "file": "projects/virtualizer/core/refs/renderer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\nimport { VRect } from \"./rect\";\n\nexport const V_RENDERER = new InjectionToken<VRenderer>('V_RENDERER');\n\nexport class VRenderer {\n\n  public constructor() {\n\n  }\n\n  public getRect(): VRect {\n    return {\n      position: 0,\n      size: 10,\n    }\n  }\n\n  public notifySizeChanged(\n    size: number,\n  ): void {\n\n  }\n\n  public trackBy(): void {\n\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6,
                "modifierKind": [
                    123
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "getRect",
                    "args": [],
                    "optional": false,
                    "returnType": "VRect",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "notifySizeChanged",
                    "args": [
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackBy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "VContainerDirective",
            "id": "directive-VContainerDirective-f7aa0340b842446157328a9f61e7c83792e19fe90f60dae11dbc3db6d1d246da80e0902fb357f987d6fa9a0a9937a6b46553ff8f81fc18801d55b3cfc2c178f6",
            "file": "projects/virtualizer/core/container/container.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, OnInit } from \"@angular/core\";\nimport { VScrollDirective } from \"../scroll/scroll.directive\";\n\n@Directive({\n  selector: 'vContainer',\n})\nexport class VContainerDirective implements OnInit {\n\n  public constructor(\n    private readonly scroll: VScrollDirective,\n  ) { }\n\n  public ngOnInit(): void {\n\n  }\n\n}\n",
            "selector": "vContainer",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "scroll",
                        "type": "VScrollDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": "scroll",
                        "type": "VScrollDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "VForDirective",
            "id": "directive-VForDirective-7346a5524d40bc787053229f433733d1672423d760c0cddfb5531c1d9ea5b9bc3e0c3fab0217b1df65422ba4a2008192c0b9402edd844709b96b4f5816f5ddf6",
            "file": "projects/virtualizer/core/renderer/for.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, ComponentFactoryResolver, Directive, Injector, Input, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { VContext } from \"../refs/context\";\nimport { VComponent } from \"./v.component\";\n\n@Directive({\n  selector: '[vFor]',\n})\nexport class VForDirective<T> implements OnInit, AfterViewInit {\n\n  @Input('vForOf')\n  public items: T[] = [];\n\n  @Input('vForTrackBy')\n  public trackByFn = null;\n\n  public constructor(\n    private readonly componentFactoryResolver: ComponentFactoryResolver,\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly templateRef: TemplateRef<VContext<T>>,\n    private readonly injector: Injector,\n  ) { }\n\n  public ngOnInit(): void {\n    console.log('vFor Init');\n  }\n\n  public ngAfterViewInit(): void {\n\n  }\n\n  public a(): void {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(VComponent);\n  }\n\n}\n",
            "selector": "[vFor]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "vForOf",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "vForTrackBy",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "a",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<VContext<T>>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<VContext<T>>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "VItemDirective",
            "id": "directive-VItemDirective-9e305197a1c6e76c1479f36898430f67c0b45e7625cc408631a7fd940e87522358bb4887bf50795a57a8d62264bfba8ca4ba060c845bb8d3d3cd152ef0f56ecc",
            "file": "projects/virtualizer/core/renderer/item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: '[vItem]',\n})\nexport class VItemDirective {}\n",
            "selector": "[vItem]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "VScrollDirective",
            "id": "directive-VScrollDirective-5325976a9df28442bd95194fb663ea9b86d9d0d765f0f3977343351e7323033b49aec0c22ef42249198fe74d8acc2daba9bec74af99cd4ee7e6a0d7a52d9c11e",
            "file": "projects/virtualizer/core/scroll/scroll.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n} from \"@angular/core\";\nimport { fromEvent, SubscriptionLike } from \"rxjs\";\nimport { tap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[vScroll]'\n})\nexport class VScrollDirective implements OnInit, AfterViewInit, OnDestroy {\n\n  private readonly _subscriptions: SubscriptionLike[] = [];\n\n  public constructor(\n    private readonly elementRef: ElementRef<HTMLElement>,\n  ) { }\n\n  public ngOnInit(): void {\n    this._subscriptions.push(\n      fromEvent(this.elementRef.nativeElement, 'scroll').pipe(\n        tap((e) => {\n          console.log(e);\n        })\n      ).subscribe(),\n    )\n  }\n\n  public ngAfterViewInit(): void {\n\n  }\n\n  public ngOnDestroy(): void {\n    this._subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n",
            "selector": "[vScroll]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_subscriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SubscriptionLike[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "BasicComponent",
            "id": "component-BasicComponent-003969dd116a139ad7c42f2affa8d6827b2966a393bc2316aae009fbf4e858f7b23f369638ba8f74b346e3ecc485e54093aa4b1da09f0b7312bc5574f441cc65",
            "file": "stories/basic/basic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "basic-component",
            "styleUrls": [
                "./basic.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./basic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'basic-component',\n  templateUrl: './basic.component.html',\n  styleUrls: ['./basic.component.scss'],\n})\nexport class BasicComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./basic.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "Hello World!\n"
        },
        {
            "name": "VComponent",
            "id": "component-VComponent-00b3f5c88a8fa562815ebf1aaa9306b766df55f7a478fddbee8d8683d737834e9a2b3d78061cdb03ff807c9f77a7136e93226bfbc4b961e297b969b3de47a6b7",
            "file": "projects/virtualizer/core/renderer/v.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "v",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "position",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.top'"
                        }
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.top",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Inject, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { VContext, V_CONTEXT } from \"../refs/context\";\nimport { V_TEMPLATE } from \"../refs/template\";\n\n@Component({\n  selector: 'v',\n  template: '',\n  styles: ['']\n})\nexport class VComponent<T> implements OnInit {\n\n  direction: string = 'vertical';\n  @HostBinding('style.top')\n  position: number = 0;\n  size: number = 0;\n\n  public constructor(\n    @Inject(V_TEMPLATE)\n    private readonly templateRef: TemplateRef<VContext<T>>,\n    @Inject(V_CONTEXT)\n    private readonly context: VContext<T>,\n    private readonly viewContainerRef: ViewContainerRef,\n  ) { }\n\n  public ngOnInit(): void {\n    this.viewContainerRef.createEmbeddedView(this.templateRef, this.context)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<VContext<T>>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "context",
                        "type": "VContext<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<VContext<T>>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "context",
                        "type": "VContext<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "BasicModule",
            "id": "module-BasicModule-4cf856bcde1c8eacd5d23e7d50d169c7ddb5419dc5d612d183bce1f2b56098f22bdd0756b09b2efd5e2af4ae42b9cada538a26db50082049e85a5e3761fd4ae7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "stories/basic/basic.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { BasicComponent } from \"./basic.component\";\n\n@NgModule({\n  declarations: [\n    BasicComponent,\n  ],\n  exports: [\n    BasicComponent,\n  ],\n})\nexport class BasicModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BasicComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BasicComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "VirtualizerModule",
            "id": "module-VirtualizerModule-f1a3b4c75c31ac397681bc229411335fbf95f9fa2159706ba54837aae6b27f575ecb437c62214a1e3bf6fac6c29a2e0c1b605e38525a0e27b5e32ffee3bcbe4a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/virtualizer/core/virtualizer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { VContainerDirective } from './container/container.directive';\nimport { VForDirective } from './renderer/for.directive';\nimport { VItemDirective } from './renderer/item.directive';\nimport { VScrollDirective } from './scroll/scroll.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    VScrollDirective,\n    VContainerDirective,\n    VForDirective,\n    VItemDirective,\n  ],\n  exports: [\n    VScrollDirective,\n    VContainerDirective,\n    VForDirective,\n    VItemDirective,\n  ]\n})\nexport class VirtualizerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "VContainerDirective"
                        },
                        {
                            "name": "VForDirective"
                        },
                        {
                            "name": "VItemDirective"
                        },
                        {
                            "name": "VScrollDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "VContainerDirective"
                        },
                        {
                            "name": "VForDirective"
                        },
                        {
                            "name": "VItemDirective"
                        },
                        {
                            "name": "VScrollDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "V_CONTEXT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/virtualizer/core/refs/context.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<VContext>('')"
            },
            {
                "name": "V_RENDERER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/virtualizer/core/refs/renderer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<VRenderer>('V_RENDERER')"
            },
            {
                "name": "V_TEMPLATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/virtualizer/core/refs/template.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('V_TEMPLATE')"
            },
            {
                "name": "VERSION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/virtualizer/main/public-api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'1.0.0'"
            }
        ],
        "functions": [
            {
                "name": "createResizeObserver",
                "file": "projects/virtualizer/tools/resize-observer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Observable<void>"
            }
        ],
        "typealiases": [
            {
                "name": "RectBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "projects/virtualizer/core/refs/rect.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/virtualizer/core/refs/context.ts": [
                {
                    "name": "V_CONTEXT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/virtualizer/core/refs/context.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<VContext>('')"
                }
            ],
            "projects/virtualizer/core/refs/renderer.ts": [
                {
                    "name": "V_RENDERER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/virtualizer/core/refs/renderer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<VRenderer>('V_RENDERER')"
                }
            ],
            "projects/virtualizer/core/refs/template.ts": [
                {
                    "name": "V_TEMPLATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/virtualizer/core/refs/template.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('V_TEMPLATE')"
                }
            ],
            "projects/virtualizer/main/public-api.ts": [
                {
                    "name": "VERSION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/virtualizer/main/public-api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'1.0.0'"
                }
            ]
        },
        "groupedFunctions": {
            "projects/virtualizer/tools/resize-observer.ts": [
                {
                    "name": "createResizeObserver",
                    "file": "projects/virtualizer/tools/resize-observer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Observable<void>"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/virtualizer/core/refs/rect.ts": [
                {
                    "name": "RectBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "projects/virtualizer/core/refs/rect.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/virtualizer/core/container/container.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VContainerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/context.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VContext",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/context.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "V_CONTEXT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/rect.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VRect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/renderer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VRenderer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/renderer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "V_RENDERER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/refs/template.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "V_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/renderer/for.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VForDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/renderer/item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/renderer/v.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/scroll/scroll.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VScrollDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/core/store/store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "VStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/main/public-api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VERSION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/virtualizer/tools/resize-observer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createResizeObserver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/basic/basic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}